{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/bootstrap/tools.tsx","webpack://gatsby-starter-default/./src/components/hero/hero.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"names":["mapSizes","set","fn","Object","keys","sizeClassesFromSet","map","size","buildClass","values","filter","e","join","mergeClasses","classes","withClass","object","newClassNames","className","nodes","spacer","shift","node","key","Fragment","HeroImage","image","HeroButtons","buttons","props","children","Link","heading","ProfileImage","S","src","alt","imgClassName","width","height","loading","data","useStaticQuery","title","site","siteMetadata","heroButtons"],"mappings":"gqCAYaA,EAAW,SACtBC,EACAC,GAEA,OARgC,SAAoBD,GACpD,OAAOE,OAAOC,KAAKH,GAOZI,CAAmBJ,GACvBK,KAAI,SAACC,GACJ,OAAOL,EAAGD,EAAIM,GAAYA,OAcnBC,EAAa,WAAyC,2BAArCC,EAAqC,yBAArCA,EAAqC,gBACjE,OAAOA,EAAOC,QAAO,SAAAC,GAAC,OAAS,MAALA,GAAkB,IAALA,KAASC,KAAK,MAkB1CC,EAAe,WAAsC,2BAAlCC,EAAkC,yBAAlCA,EAAkC,gBAChE,OAAOA,EAAQJ,QAAO,SAAAC,GAAC,OAAS,MAALA,GAAkB,IAALA,KAASC,KAAK,MAK3CG,EAAY,SAAuBC,GAA6C,2BAA/BC,EAA+B,iCAA/BA,EAA+B,kBAC3F,wBACKD,EADL,CAEEE,UAAWL,EAAY,WAAZ,GAAaG,EAAOE,WAApB,OAAkCD,OAYpCL,EAAO,SAACO,EAAeC,GAAhB,gBAAgBA,MAAe,KACjD,gCACGD,EAAME,QACNF,EAAMb,KAAK,SAACgB,EAAYC,GAAb,OAA6B,gBAAC,EAAAC,SAAD,CAAUD,IAAKA,GAAMH,EAAQE,S,wJCtEpEG,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAChB,uBAAKR,UAAU,6DACZQ,IAWCC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAYC,GAAf,6BAClB,uBAASd,QAAUc,EAHQ,iDAIxBD,EAAQtB,KAAI,WAAoCiB,GAApC,IAAEO,EAAF,EAAEA,SAAaD,GAAf,8BAA4C,gBAAC,EAAAE,KAAD,eAAMR,IAAKA,IAASR,QAAUc,IAASC,QAsBpG,EAXa,SAAC,GAAD,IAAGA,EAAH,EAAGA,SAAUE,EAAb,EAAaA,QAASN,EAAtB,EAAsBA,MAAOE,EAA7B,EAA6BA,QAAYC,GAAzC,0DACX,uBAASd,QAAUc,EAFC,mEAGlB,gBAACJ,EAAD,CAAWC,MAAOA,IAClB,uBAAKR,UAAU,YACb,sBAAIA,UAAU,+BAA+Bc,GAC5CF,EACD,gBAACH,EAAD,CAAaC,QAASA,OC3BtBK,EAAe,kBACnB,gBAAC,EAAAC,EAAD,CACEC,IAAI,2BACJC,IAAI,iCACJC,aAAa,sBACbnB,UAAU,qBACVoB,MAAO,IACPC,OAAQ,IACRC,QAAQ,OAPV,sBAqCF,EA1BkB,WAChB,IAAMC,GAAOC,oBAAe,cAc5B,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,SACX,gBAAC,EAAD,CAAMX,QAAQ,gBAAgBN,MAAO,gBAACO,EAAD,MAAkBL,QAASa,EAAKG,KAAKC,aAAaC,aACrF,qBAAG5B,UAAU,QAAb","file":"component---src-pages-index-tsx-2a3b6baf08166b566f4e.js","sourcesContent":["import React, { ReactNode as Node, Fragment } from \"react\";\n\n// Bootstrap Common Values\nexport type SizeClassInfix = \"\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\";\nexport type SizeClassSet<V> = { \n  [key in SizeClassInfix]?: V\n};\n\nexport const sizeClassesFromSet = <V extends unknown>(set: SizeClassSet<V>): SizeClassInfix[] => {\n  return Object.keys(set) as SizeClassInfix[];\n};\n\nexport const mapSizes = <V extends unknown, U extends unknown>(\n  set: SizeClassSet<V>, \n  fn: (value: V, size: SizeClassInfix) => U\n): U[] => {\n  return sizeClassesFromSet(set)\n    .map((size: SizeClassInfix) => {\n      return fn(set[size] as V, size);\n    });\n};\n\n\n// Columns\nexport type ColumnSize = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n\n// Padding and Margin\nexport type MPSides = \"t\" | \"e\" | \"b\" | \"s\" | \"x\" | \"y\" | \"\" | undefined;\nexport type MPScaler = 0 | 1 | 2 | 3 | 4 | 5 | \"auto\";\nexport type MPType = \"m\" | \"p\";\n\ntype ClassComponent = (string | number | null | undefined);\nexport const buildClass = (...values: ClassComponent[]): string => {\n  return values.filter(e => e != null && e != \"\").join(\"-\");\n};\n\nconst bc = buildClass;\n\nexport const infix = (value: string | number | undefined): string => {\n  return value ? \"-\" + value + \"-\" : \"-\";\n};\n\nexport const classesFromSizes = <V extends ClassComponent>(prefix: string, values: SizeClassSet<V>): string => {\n  return mapSizes(values, (value, size) => bc(prefix, size, value)).join(\" \");\n};\n\nexport interface ClassNamed {\n  className?: string;\n}\n\ntype ClassOrNot = string | undefined;\nexport const mergeClasses = (...classes: ClassOrNot[]): string => {\n  return classes.filter(e => e != null && e != \"\").join(\" \");\n};\n\n\n// withClass adds in the extra classes into the object provided using a shallow copy.\nexport const withClass = <T extends ClassNamed>(object: T, ...newClassNames: string[]): T => {\n  return { \n    ...object, \n    className: mergeClasses(object.className, ...newClassNames)\n  };\n};\n\n\n\n// Join take an array of elements and creates an array where each node inside of\n// the array is spaced by the spacer, which is a space by default. This is super\n// helpful for rendering multiple joining text pieces.\n//\n// Example: [\"<p>A</p>\", \"<p>B</p>\"] becomes [\"<p>A</p>\", \" \", \"<p>B</p>\"];\n//\nexport const join = (nodes: Node[], spacer: Node = \" \") => (\n  <>\n    {nodes.shift()}\n    {nodes.map(((node: Node, key: number) => <Fragment key={key}>{spacer}{node}</Fragment>))}\n  </>\n);","import React from \"react\";\n\nimport { Link, GatsbyLinkProps } from \"gatsby\"\nimport { withClass } from \"../bootstrap/tools\";\n\nconst HeroImage = ({ image }: { image: React.ReactNode }) => (\n  <div className=\"offset-1 col-10 offset-sm-2 col-sm-8 offset-lg-0 col-lg-6\">\n    {image}\n  </div>\n);\n\ninterface ButtonProps extends Omit<GatsbyLinkProps<{}>, 'ref'> {};\ninterface ButtonsProps extends React.HTMLProps<HTMLDivElement> {\n  buttons: ButtonProps[];\n}\n\nconst heroButtonsClassName = `d-grid gap-2 d-md-flex justify-content-evenly`;\nconst heroButtonClassName= `btn-lg px-4`;\nconst HeroButtons = ({ buttons, ...props }: ButtonsProps) => (\n  <div {...withClass(props, heroButtonsClassName)}>\n    {buttons.map(({children, ...props}: ButtonProps, key) => <Link key={key} {...withClass(props)}>{children}</Link>)}\n  </div>\n);\n\ninterface HeroProps extends React.HTMLProps<HTMLDivElement> {\n  heading: React.ReactNode;\n  image: React.ReactNode;\n  buttons: ButtonProps[];\n}\n\nconst heroClassName = `row text-center flex-lg-row-reverse align-items-center g-5 py-5`;\nconst Hero = ({ children, heading, image, buttons, ...props }: HeroProps) => (\n  <div {...withClass(props, heroClassName)}>\n    <HeroImage image={image} />\n    <div className=\"col-lg-6\">\n      <h1 className=\"display-5 fw-bold lh-1 mb-3\">{heading}</h1>\n      {children}\n      <HeroButtons buttons={buttons} />\n    </div>\n  </div>\n);\n\nexport default Hero;","import * as React from \"react\";\n\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nimport Hero from \"../components/hero/hero\";\n\nconst ProfileImage = () => (\n  <StaticImage\n    src=\"../images/londoneye.jpeg\"\n    alt=\"A bearded and spectacled nerd.\"\n    imgClassName=\"img-fluid rounded-3\"\n    className=\"d-block mx-lg-auto\"\n    width={700}\n    height={500}\n    loading=\"lazy\"\n  />\n);\n\nconst IndexPage = () => {\n  const data = useStaticQuery(graphql`\n    query HeroButtons {\n      site {\n        siteMetadata {\n          heroButtons {\n            content\n            to\n          }\n        }\n      }\n    }  \n  `)\n\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <Hero heading=\"Hey, I'm Jake\" image={<ProfileImage />} buttons={data.site.siteMetadata.heroButtons}>\n        <p className=\"lead\">\n          I create things using words and code.\n        </p>\n      </Hero>\n    </Layout>\n  );\n};\nexport default IndexPage\n"],"sourceRoot":""}